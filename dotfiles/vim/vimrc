"Plugins
call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-sensible'  "sensible defaults
Plug 'tpope/vim-fugitive'  "git wrapper (eg: Gblame)
Plug 'tpope/vim-surround'  "easily modify surrounding characters
Plug 'tomtom/tcomment_vim' "comment things
Plug 'christoomey/vim-tmux-navigator'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'sheerun/vim-polyglot'

Plug 'bogado/file-line'
Plug 'fatih/vim-go' "?
Plug 'hashivim/vim-terraform' "?
Plug 'leafgarland/typescript-vim'
Plug 'rodjek/vim-puppet' "?
Plug 'strogonoff/vim-coffee-script' "?
Plug 'dense-analysis/ale'
Plug 'editorconfig/editorconfig-vim'
Plug 'ahayworth/ink-syntax-vim'
Plug 'embear/vim-localvimrc'

Plug 'gruvbox-community/gruvbox'

call plug#end()

"Display
set background=dark
set number
set showmatch "jump when completing a brace
set mat=3 "highlight that match for .3 seconds
set linebreak "dont wrap in the middle of a word
set ttyfast "I almost always have one
"set mouse= "I really dislike using a mouse in vim
hi CursorLine   cterm=NONE ctermbg=darkgrey ctermfg=white guibg=darkred guifg=white
hi CursorColumn cterm=NONE ctermbg=grey ctermfg=white guibg=darkred guifg=white

"Tabs
set expandtab "spaces, yo
set tabstop=2
set shiftwidth=2

"Search
set hlsearch
set ic "ignore case
set smartcase "care about case if you type something uppercase

"Code Fold
set foldmethod=manual
set nofoldenable
set foldnestmax=5

"Randoms
set nocompatible
set copyindent "Auto-indent for new lines should use whatever indents are in-use
let g:is_posix=1 "Yes, we have a 'posix' shell.
"Stay out of ex-mode unless you really, really mean it.
nnoremap Q gQ
set belloff=all "The terminal-bell be damned

set wildmode=list:longest "match up to the point of ambiguity
set title "set terminal title intelligently
nnoremap <Leader>l :set cursorline! <CR>
nnoremap <Leader>c :set cursorcolumn! <CR>

"remap j/k to treat long lines as broken lines
map j gj
map k gk

"swap nonsense
set undodir=~/.vim/.undo//
set backupdir=~/.vim/.backup//
set directory=~/.vim/.swp//

"ale config
set mouse=a
if !has('nvim')
  set ttymouse=xterm2
  let g:ale_set_balloons = 1
endif
if has('nvim')
  let g:ale_sign_highlight_linenrs = 1
  let g:ale_virtualtext_cursor = 1
endif
let g:ale_sign_column_always = 1
let g:ale_lint_delay = 500
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%severity%] [%linter%] %s %(code)%'
set completeopt=menu,menuone,preview,noselect,noinsert
let g:ale_completion_enabled = 1
let g:ale_linters = {
\  'ruby': ['brakeman', 'rails_best_practices', 'reek', 'ruby', 'solargraph'],
\  'rust': ['analyzer'],
\}
let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\ 'typescript': ['eslint'],
\ 'javascript': ['eslint'],
\ 'rust': ['rustfmt'],
\}
let g:ale_ink_ls_initialization_options = {
\  'ink': {
\    'mainStoryPath': 'init.ink',
\    'inklecateExecutablePath': '/usr/local/bin/inklecate',
\    'runThroughMono': v:false,
\  }
\}
let g:airline#extensions#ale#enabled = 1
let g:airline_theme='minimalist'

"terraform bits
let g:terraform_align=1
let g:terraform_fmt_on_save=1

let g:localvimrc_persistent=1

"colors!
set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

let g:gruvbox_contrast_dark = 'hard'
let g:gruvbox_italic = 1
colorscheme gruvbox

nnoremap <silent> [oh :call gruvbox#hls_show()<CR>
nnoremap <silent> ]oh :call gruvbox#hls_hide()<CR>
nnoremap <silent> coh :call gruvbox#hls_toggle()<CR>

nnoremap * :let @/ = ""<CR>:call gruvbox#hls_show()<CR>*
nnoremap / :let @/ = ""<CR>:call gruvbox#hls_show()<CR>/
nnoremap ? :let @/ = ""<CR>:call gruvbox#hls_show()<CR>?

"show-me-my-whitespace stuff. needs to be at the end.
highlight WhiteSpaceEOL ctermbg=darkgreen
match WhiteSpaceEOL /\s\+$/
