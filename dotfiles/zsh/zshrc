HISTFILE=~/.histfile
HISTSIZE=5000
SAVEHIST=5000
setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS

unsetopt BEEP

bindkey -v
KEYTIMEOUT=1

export EDITOR=vim
if [[ "$(uname)" = "Darwin" ]]; then
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
fi

ps -ef | grep -q '[s]sh-agent' || eval `ssh-agent` >/dev/null
which rbenv  >/dev/null && eval "$(rbenv init -)"
which nodenv >/dev/null && eval "$(nodenv init -)"
which dip >/dev/null && eval "$(dip console)"
which brew >/dev/null && eval "$({{@@ homebrew_prefix @@}}/bin/brew shellenv)"

autoload_inits=(compinit)
for f in $autoload_inits; do
  autoload -Uz $f && $f
done

source ~/.zsh/aliases
source ~/.zsh/functions

zstyle ':completion:*' menu select

source ~/.zsh/fsh/fast-syntax-highlighting.plugin.zsh

if [[ -f $HOME/.asdf/asdf.sh ]]; then
  . $HOME/.asdf/asdf.sh
fi

autoload -U +X bashcompinit && bashcompinit
[[ -f /usr/local/bin/terraform ]] && complete -o nospace -C /usr/local/bin/terraform terraform

typeset -U path
[[ -d ~/bin ]] && path=(~/bin $path)
[[ -d ~/.poetry/bin ]] && path=(~/.poetry/bin $path)

{%@@ if mac @@%}
postgres_bin=/Applications/Postgres.app/Contents/Versions/latest/bin
[[ -d $postgres_bin ]] && path=($postgres_bin $path)
{%@@ endif @@%}

[[ -d /usr/local/go/bin ]] && path=(/usr/local/go/bin $path)
[[ -d ~/.cargo/env ]] && . "$HOME/.cargo/env"
[[ -d {{@@ homebrew_prefix @@}} ]] && path=({{@@ homebrew_prefix @@}}/bin {{@@ homebrew_prefix @@}}/sbin $path)

[[ -d ~/.zsh/fpath ]] && fpath=($fpath ~/.zsh/fpath)

eval "$(starship init zsh)"
{%@@ if work @@%}
# Some of this is redundant, but this lets the CK setup script work
# correctly for now...
autoload -Uz compinit
fpath=(~/.zsh/completion $fpath)
compinit -i
export PATH="{{@@ homebrew_prefix @@}}/opt/node@12/bin:{{@@ homebrew_prefix @@}}/bin:{{@@ homebrew_prefix @@}}/sbin:/usr/local/go/bin:/Users/andrew/.rbenv/shims:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
{%@@ endif @@%}
